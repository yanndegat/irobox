#!/bin/bash

set -eEuo pipefail

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

IRONIC_DATA_DIR=${IRONIC_DATA_DIR:-"${SCRIPTDIR}/data"}
IRONIC_DEV_MODE=${IRONIC_DEV_MODE:-"false"}
IRONIC_SRC_DIR=${IRONIC_SRC_DIR:-"${HOME}/src/ironic"}
IRONIC_CLIENT_IMAGE=${IRONIC_CLIENT_IMAGE:-"quay.io/metal3-io/ironic-client"}
IRONIC_IMAGE=${IRONIC_IMAGE:-"quay.io/metal3-io/ironic:master"}
IRONIC_INSPECTOR_IMAGE=${IRONIC_INSPECTOR_IMAGE:-"quay.io/metal3-io/ironic"}
IPA_DOWNLOADER_IMAGE=${IPA_DOWNLOADER_IMAGE:-"quay.io/metal3-io/ironic-ipa-downloader:master"}
IPA_BASEURI=${IPA_BASEURI:-}
CONTAINER_RUNTIME="${CONTAINER_RUNTIME:-docker}"
HTTP_PORT="6180"
SERVICE_INTERFACE="${SERVICE_INTERFACE:=$(ip route get 1.2.3.4 | awk '/src/ {print $5}')}"
SERVICE_IP="${SERVICE_IP:=$(ip route get 1.2.3.4 | awk '/'$SERVICE_INTERFACE'/ {print $7}')}"
DHCP_RANGE="${DHCP_RANGE:-"172.22.0.10,172.22.0.100"}"
IRONIC_KERNEL_PARAMS="${IRONIC_KERNEL_PARAMS:-"console=ttyS0"}"
IRONIC_BOOT_ISO_SOURCE="${IRONIC_BOOT_ISO_SOURCE:-"local"}"
IRONIC_EXTRA_VARS=${IRONIC_EXTRA_VARS:-""}
IPA_DOWNLOAD_ENABLED="${IPA_DOWNLOAD_ENABLED:-true}"
USE_LOCAL_IPA="${USE_LOCAL_IPA:-false}"
LOCAL_IPA_PATH="${LOCAL_IPA_PATH:-/tmp/dib}"
IRONIC_BASE_URL="http://${SERVICE_IP}"
DEPLOY_KERNEL_URL="${DEPLOY_KERNEL_URL:-"http://${SERVICE_IP}:${HTTP_PORT}/images/ironic-python-agent.kernel"}"
DEPLOY_RAMDISK_URL="${DEPLOY_RAMDISK_URL:-"http://${SERVICE_IP}:${HTTP_PORT}/images/ironic-python-agent.initramfs"}"
DEPLOY_ISO_URL=${DEPLOY_ISO_URL:-}
IRONIC_ENDPOINT="${IRONIC_ENDPOINT:-"${IRONIC_BASE_URL}:6385/v1/"}"
IRONIC_INSPECTOR_ENDPOINT="${IRONIC_INSPECTOR_ENDPOINT:-"${IRONIC_BASE_URL}:5050/v1/"}"
CACHEURL="${CACHEURL:-"http://${SERVICE_IP}/images"}"
IRONIC_FAST_TRACK="${IRONIC_FAST_TRACK:-"true"}"
INSPECTOR_REVERSE_PROXY_SETUP=${INSPECTOR_REVERSE_PROXY_SETUP:-"true"}
IRONIC_INSPECTOR_VLAN_INTERFACES=${IRONIC_INSPECTOR_VLAN_INTERFACES:-"all"}

sudo mkdir -p "$IRONIC_DATA_DIR/html/images"
sudo mkdir -p "$IRONIC_DATA_DIR/openstack"

cat > "${SCRIPTDIR}/.env" <<EOF
IRONIC_DEV_MODE=${IRONIC_DEV_MODE}
HTTP_PORT=${HTTP_PORT}
IPA_DOWNLOADER_IMAGE=${IPA_DOWNLOADER_IMAGE}
IRONIC_IMAGE=${IRONIC_IMAGE}
IRONIC_DATA_DIR=${IRONIC_DATA_DIR}
SERVICE_IP=${SERVICE_IP}
# used by ironic-image internal scripts
PROVISIONING_IP=${SERVICE_IP}
# used by ironic-image internal scripts
PROVISIONING_INTERFACE=${SERVICE_INTERFACE}
DHCP_RANGE=${DHCP_RANGE}
DEPLOY_KERNEL_URL=${DEPLOY_KERNEL_URL}
DEPLOY_RAMDISK_URL=${DEPLOY_RAMDISK_URL}
DEPLOY_ISO_URL=${DEPLOY_ISO_URL}
IRONIC_ENDPOINT=${IRONIC_ENDPOINT}
IRONIC_INSPECTOR_ENDPOINT=${IRONIC_INSPECTOR_ENDPOINT}
CACHEURL=${CACHEURL}
IRONIC_FAST_TRACK=${IRONIC_FAST_TRACK}
IRONIC_KERNEL_PARAMS=${IRONIC_KERNEL_PARAMS}
IRONIC_BOOT_ISO_SOURCE=${IRONIC_BOOT_ISO_SOURCE}
INSPECTOR_REVERSE_PROXY_SETUP=${INSPECTOR_REVERSE_PROXY_SETUP}
IRONIC_INSPECTOR_VLAN_INTERFACES=${IRONIC_INSPECTOR_VLAN_INTERFACES}
IPA_BASEURI=${IPA_BASEURI}
MARIADB_PASSWORD=$(echo "$(date;hostname)"|sha256sum |cut -c-20)
EOF

if [ "$IRONIC_DEV_MODE" == "true" ]; then
    cat >> "${SCRIPTDIR}/.env" <<EOF
IRONIC_SRC_DIR=$(cd "${IRONIC_SRC_DIR}" && pwd )
EOF
fi


if [ -f "$IRONIC_EXTRA_VARS" ]; then
      cat  "$IRONIC_EXTRA_VARS" >> "${SCRIPTDIR}/.env"
fi

cat > "${IRONIC_DATA_DIR}/openstack/clouds.yaml" <<EOF
clouds:
  ironic:
    # auth_type: http_basic
    # auth:
    #   username: userxxx
    #   password: passyyy


    #cacert: /etc/openstack/ironic-ca.crt
    baremetal_endpoint_override: ${IRONIC_ENDPOINT}
    baremetal_introspection_endpoint_override: ${IRONIC_INSPECTOR_ENDPOINT}
EOF

cat > "${SCRIPTDIR}/baremetal" <<EOF
#!/usr/bin/env bash
${CONTAINER_RUNTIME} run --net=host \
  -v "${IRONIC_DATA_DIR}/openstack:/etc/openstack" --rm \
  -e OS_CLOUD="${OS_CLOUD:-ironic}" "${IRONIC_CLIENT_IMAGE}" "\$@"
EOF

chmod +x "${SCRIPTDIR}/baremetal"
